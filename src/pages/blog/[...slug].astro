---
import { Image, Picture } from "@astrojs/image/components";
import Authorcard from "@components/authorcard.astro";
import Container from "@components/container.astro";
import Label from "@components/ui/label.astro";
import Layout from "@layouts/Layout.astro";
import { getFormattedDate, PROSE_DEFAULT } from "@utils/utils";
import {
  BlogPost,
  BlogPostData,
  BlogPostVisual,
  postWithSlug,
} from "@data/blogPost";

import fs from "fs";
import path from "path";
import { getAllPosts } from "@utils/content";
export async function getStaticPaths() {
  let allPosts = await getAllPosts();
  return allPosts.map((e) => {
    return {
      props: { post: e },
      params: { slug: e.data.slug },
    };
  });
}

const post: BlogPost = Astro.props.post;
const Visual: BlogPostVisual = post.visual;
const data: BlogPostData = post.data;
const { category, author } = post.data;
---

<Layout
  title={post.data.title}
  desc={post.data.excerpt}
  ogimage={post.data.image}>
  <Container>
    <div class="max-w-screen-md mx-auto">
      <div class="text-center">
        <Label theme={category.color}>{category.title}</Label>
      </div>

      <h1
        class="mt-2 mb-3 text-3xl font-semibold tracking-tight text-center lg:leading-snug text-brand-primary lg:text-4xl dark:text-white">
        {post.data.title}
      </h1>

      <div class="flex justify-center mt-3 space-x-3 text-gray-500">
        <div class="flex items-center gap-3 py-2">
          <div class="relative flex-shrink-0 w-10 h-10">
            {
              author.image && (
                <Image
                  src={author.image}
                  alt="Author Photo"
                  width={80}
                  height={80}
                  loading="eager"
                  class="rounded-full"
                />
              )
            }
          </div>

          <div>
            <p class="text-gray-800 dark:text-gray-400">
              {author.name}
            </p>
            <div class="flex items-center space-x-2 text-sm">
              <time
                class="text-gray-500 dark:text-gray-400"
                datetime={post.data.publishDate}>
                {getFormattedDate(post.data.publishDate)}
              </time>
              <span>
                <!-- TODO -->
                · {5} min read
              </span>
            </div>
          </div>
        </div>
      </div>
    </div>
  </Container>

  <div
    class="relative z-0 max-w-screen-lg mx-auto overflow-hidden lg:rounded-lg aspect-video">
    {
      post.data.image && (
        <Picture
          src={post.data.image}
          widths={[200, 400, 800]}
          sizes="(max-width: 640px) 90vw, 480px"
          aspectRatio="16:9"
          width={1024}
          heignt={576}
          alt="Thumbnail"
          loading="eager"
          class="w-full"
        />
      )
    }
  </div>

  <Container>
    <article class="max-w-screen-md mx-auto">
      <div class={`mx-auto my-3 ${PROSE_DEFAULT}`}>
        <Visual {data} />
        <div class="flex flex-wrap items-center w-full gap-3 md:w-auto">
          {
            post.data.tags.map((tag) => (
              <span class="text-sm text-gray-500">#{tag}</span>
            ))
          }
        </div>
      </div>

      <div class="flex justify-center mt-7 mb-7">
        <a
          href="/"
          class="font-bold px-5 py-3 text-sm transition rounded-md text-white bg-gray-700 hover:bg-gray-500">
          ← View all posts
        </a>
      </div>
      {author && <Authorcard author={author} />}
    </article>
  </Container>
</Layout>
